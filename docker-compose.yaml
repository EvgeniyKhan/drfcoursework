version: "3"

services:
  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - '6379:6379'
    env_file:
      - .env

  db:
    image: "postgres"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 10s
      retries: 5

  celery:
    build: .
    tty: true
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - redis
      - app
      - db
    command: celery -A config worker -l INFO

  celery_beat:
    build: .
    tty: true
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - redis
      - app
      - db
    command: celery -A config beat -l INFO -S django

  app:
    build: .
    tty: true
    command: sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8080"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

volumes:
  pg_data:

